Мы должны разбивать программу на независящие друг от друга модули.
Они должны как можно меньше знать друг о друге.
Это называется "слабая связность"
Разбейте задачу на независящие друг от друга модули,
и вам станет легче её поддерживать, в дальнейшем переписывать.
Вся работа программиста это постоянное переписывание своего кода.
Нет ни одного живого проекта, который сразу был написан и всегда бы работал.

В модели мы абстрагируемся от метода хранения данных.


Бизнес всё время хочет от нас всё больше и больше.
Требования бизнеса постоянно увеличиваются.
И растёт наша востребованность.
Но бизнес хочет, чтобы его требования выполнялись _быстро_.
Это самое главное качество php программиста.
Бистро не значит тяп-ляп, здесь и сейчас всё работает.
Бизнес хочет быстро всегда. Когда придут новые работники и сразу разберутся.

Разработчик всегда хочет быстро и "на отстань" сделать.
А бизнес всегда хочет быстро и хорошо.

Чтобы снять это противоречие, придуманы всякие архитектурные подходы:
- модульность
- слабая связанность
- MVC
Это всё выполняет задачу не чтобы программисту было хорошо,
а чтобы бизнесу было хорошо.
Прежде всего.

----------------------
в МVC на модели возлагается самая жирная часть работы
так и называются "толстая модель"
они должны реализовать:
- работа с хранилищем данных
- реализуют бизнес-логику

помимо просто работы с данными
у бизнеса часто бывают некие задачи по обработке этих данных
например, регистрируя нового пользователя
было бы неплохо отправить ему письмо, что мы его приветствуем на нашем сайте,
напомнить его логин и дать ссылочку на восстановление пароля на случай, если он его забудет

принято
если вы не выделяете специально слой бизнес-логики
такие вещи делать именно в моделях
поэтому они считаются самой толcтой частью MVC

------------------------------------------------

сделали простейшую модель, реализовали 2 метода статических
findAll и findByPk
разбирая ORM проходили, что
статические методы работают с таблицей в целом, например, выбирают из неё данные
динамические работают с отдельными записями, например, модифицируют и сохраняют данные
------------------------------------------------

Модель должна выполнять операции CRUD
любая админ-панель любой CMS по сути дела реализует эти 4 метода
чем бы вы ни управляли - новости, статьи, пользователи, любые сущности в БД

--------------------------------------
Реализация ORM
каждый фреймворк на php
имеет либо свою реализацию ORM
либо пользуется общеизвестной
Смотреть
Doctrine монстр, очень универсальное решение, высокий порог вхождения, много кода, подходит для всего
Propel попроще
Yii имеет свою реализацию

--------------------------------------
Создадим реализацию ORM сами
Требования к классу модели:

// хотим создавать объект в базе данных просто создавая объект с своем классе
$book = new Book;
// задавать некие поля в виде свойств этого объекта
$book->title = 'War and peace';
// иметь возможность вызвать некий метод save, который все сделанные изменения сохранит в БД
$book->save();
// после чего наш объект изменится и мы сможем узнать его id (полученное при сохранении в БД) как свойство
echo $book->id;

---------------------------------------
Требования к классу модели

возможность присваивать любые атрибуты
вставка нового объекта в базу
обновление уже существующего
получение от методов Model::find() объекта нужного класса

--------------------------------------
есть функция в PDO lastInsertId() позвращает
то последнее поле, которое автоматически было вставлено в таблицу во время Нашего подключения в БД
 последнее значение id типа serial,
 которое Мы сохранили

для человека естественный первичный ключ это номер зелёной карточки пенс страхования
так сделано на сайте госуслуг
часто превичный ключ делают искуственным, так проще

lastInsertId умеет работать с любой бд
--------------------------------------
в оракле нет автоинкрементных полей, там есть последовательности
--------------------------------------

Метод delete
после удаления посмотреть affected rows
если там ноль
выбросить исключение что ничего удалено не было
------------------------------
strip tags
чтобы вырезать злонамеренные теги, которые пользователи могут подсунуть через ПОСТ
------------------------------